- hosts: pydatalab
  remote_user: root
  vars:
        # FQDN of the server, keep localhost if you are only going to use this
        # locally
        hostname: localhost
        create_user: true
        use_local_files: false
        spark_url: https://www.apache.org/dist/spark/spark-1.3.1/spark-1.3.1-bin-hadoop2.6.tgz
        spark_version: spark-1.3.1-bin-hadoop2.6
        anaconda_url: https://repo.continuum.io/archive/Anaconda-2.3.0-Linux-x86_64.sh
        tensorflow_url: https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.5.0-cp27-none-linux_x86_64.whl
        epel_release_url: https://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm 
  tasks:
      # Initialization
      - include: tasks/system-init.yml

      - name: install jupyer pdf conversion dependencies
        yum: name=pandoc-pdf

      - name: configure base environment variables
        copy: src=config/environment.sh dest=/etc/profile.d/990environment.sh owner=root group=root

      # configure httpd
      - name: copy configuration
        template: src=config/httpd.conf.j2 dest=/etc/httpd/conf.d/pydatalab.conf owner=root group=root

      # Install spark      
      - name: download spark
        get_url: url={{ spark_url }} dest=/root/{{ spark_url | basename }} validate_certs=no force=no

      - name: extract spark
        unarchive: src=/root/{{ spark_url | basename }} dest=/opt/ copy=no creates=/opt/{{ spark_version }}

      - name: fix issue with pyspark and numpy > 1.10
        copy: src=patches/pyspark.mllib.py dest=/opt/{{ spark_version }}/python/pyspark/mllib/__init__.py 

      # Install anaconda
      - include: tasks/anaconda.yml

      # install python3 & jupyterhub
      - name: install python 3.4
        yum: name=python34-tools,python34-devel

      - name: get pip3 script
        get_url: url=https://bootstrap.pypa.io/get-pip.py dest=/root/get-pip.py validate_certs=no force=no

      - name: get pip3
        command: /usr/bin/python3.4 /root/get-pip.py
        args:
            creates: /usr/bin/pip3

      - name: install npm
        yum: name=npm,nodejs

      - name: install nodejs configurable-http-proxy
        command: /usr/bin/npm install -g configurable-http-proxy
        args:
            creates: /usr/lib/node_modules/configurable-http-proxy

      - name: install jupyterhub
        command: /usr/bin/pip3 install jupyterhub
        args:
            creates: /usr/bin/jupyterhub

      - name: install jupyter for jupyterhub
        command: /usr/bin/pip3 install jupyter
        args:
            creates: /usr/bin/jupyter-notebook

      - name: install ipyparallel for jupyterhub
        command: /usr/bin/pip3 install ipyparallel
        args:
            creates: /usr/lib/python3.4/site-packages/ipyparallel

      # Install Jupyter, Bokeh, PySpark

      - name: create jupyter config dir
        file: path=/etc/jupyter/ state=directory owner=root group=root recurse=yes

      - name: create jupyter data dir
        file: path=/usr/local/share/jupyter/custom state=directory owner=root group=root recurse=yes

      - name: create jupyter migrated marker
        file: path=/etc/jupyter/migrated state=touch owner=root group=root

      - name: create jupyter notebook dir
        file: path=/etc/skel/notebooks state=directory owner=root group=root recurse=yes

      - name: create user python modules dir
        file: path=/etc/skel/notebooks/python_modules/ state=directory owner=root group=root recurse=yes

      - name: add readme to modules dir
        copy: src=config/MODULES_README.txt dest=/etc/skel/notebooks/python_modules/ owner=root group=root

      - name: create dropzone for distribution-level python modules
        file: path=/opt/python_modules/ state=directory owner=root group=root recurse=yes

      - name: copy bundled libraries
        copy: src=libs/ dest=/opt/python_modules/ owner=root group=root

      - name: copy sample notebooks
        copy: src=notebooks/ dest=/etc/skel/notebooks/ owner=root group=root

      - name: copy jupyter config
        copy: src=config/jupyter_notebook_config.py dest=/etc/jupyter/jupyter_notebook_config.py owner=root group=root

      - name: copy javascript library loader
        copy: src=config/custom.js dest=/usr/local/share/jupyter/custom/custom.js owner=root group=root

      - name: copy css loader
        copy: src=config/custom.css dest=/usr/local/share/jupyter/custom/custom.css owner=root group=root

      - name: create jupyter global kernel dir
        file: path=/usr/local/share/jupyter/kernels state=directory owner=root group=root recurse=yes

      - name: create local pyspark kernel dir
        file: path=/usr/local/share/jupyter/kernels/pyspark state=directory owner=root group=root recurse=yes

      - name: register local pyspark kernel
        copy: src=config/kernels/pyspark-local.json dest=/usr/local/share/jupyter/kernels/pyspark/kernel.json owner=root group=root

      - name: check if server is Hortonworks Data Platform with pyspark
        stat: path=/usr/hdp/current/spark-client/python/pyspark/shell.py
        register: has_hdp


      - name: create HDP pyspark kernel dir
        file: path=/usr/local/share/jupyter/kernels/pyspark-hdp state=directory owner=root group=root recurse=yes
        when: has_hdp.stat.exists

      - name: register HDP pyspark kernel
        copy: src=config/kernels/pyspark-hdp.json dest=/usr/local/share/jupyter/kernels/pyspark-hdp/kernel.json owner=root group=root
        when: has_hdp.stat.exists

      - name: install jupyterhub config
        copy: src=config/jupyterhub_config.py dest=/etc/jupyterhub_config.py owner=root group=root

      # create users
      - name: create pydatalab user
        user: name=pydatalab shell=/bin/bash password=$6$rounds=100000$PGsZEWuIC.PBXTmi$BKcG/cTfEZCZOroG7sBsXQaGM0Y.JnGdNzIPpjYUOUWi/a4dSeP3Cu/BAVtkYuOkoOmmsYjT9dQOjd42hTRmv0
        when: create_user

      # start services on boot
      - name: create jupyter supervisor
        copy: src=config/supervisord.ini dest=/etc/supervisord.d/jupyter.ini owner=root group=root

      - name: start supervisord on boot
        service: name=supervisord state=restarted enabled=yes

      - name: start httpd on boot
        service: name=httpd state=restarted enabled=yes

      - name: check firewalld status
        command: /usr/bin/systemctl is-enabled firewalld
        register: firewalld_enabled
        ignore_errors: true

      - name: open firewall port 8888
        firewalld: port=8888/tcp permanent=true state=enabled immediate=yes
        when: firewalld_enabled.rc == 0

      - name: open firewall port 80
        firewalld: port=80/tcp permanent=true state=enabled immediate=yes
        when: firewalld_enabled.rc == 0

      # branding hacks

      - name: replace jupyterhub logo
        copy: src=patches/pydatalab.png dest=/usr/share/jupyter/hub/static/images/jupyter.png

      - name: replace jupyter logo
        copy: src=patches/pydatalab.png dest=/usr/lib/python3.4/site-packages/notebook/static/base/images/logo.png

      # Install additional libraries
      
      - include: tasks/anaconda-libs.yml
